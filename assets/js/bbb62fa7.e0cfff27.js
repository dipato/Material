"use strict";(self.webpackChunkmaterial=self.webpackChunkmaterial||[]).push([[5891],{6262:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(4848),n=t(8453),r=(t(1470),t(9365),t(168));const o={sidebar_position:7,sidebar_label:"Section 7"},c="Perception Layer - Section 7",l={id:"Theory/PerceptionLayer/section7",title:"Perception Layer - Section 7",description:"* Understand the steps necessary to set up and connect an ESP32 board to a Wi-Fi network.",source:"@site/docs/Theory/PerceptionLayer/section7.md",sourceDirName:"Theory/PerceptionLayer",slug:"/Theory/PerceptionLayer/section7",permalink:"/Material/docs/Theory/PerceptionLayer/section7",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"Section 7"},sidebar:"theorySidebar",previous:{title:"Section 6",permalink:"/Material/docs/Theory/PerceptionLayer/section6"}},a={},d=[{value:"Arduino core for the ESP32",id:"arduino-core-for-the-esp32",level:2},{value:"Arduino core for the ESP32: Wi-Fi API",id:"arduino-core-for-the-esp32-wi-fi-api",level:2},{value:"<strong>About</strong>",id:"about",level:3},{value:"Connectivity test",id:"connectivity-test",level:2},{value:"Wifi libraries",id:"wifi-libraries",level:2},{value:"WiFi Class",id:"wifi-class",level:3},{value:"IPAddress Class",id:"ipaddress-class",level:3},{value:"Server Class",id:"server-class",level:3},{value:"Client Class",id:"client-class",level:3},{value:"References",id:"references",level:2}];function h(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"perception-layer---section-7",children:"Perception Layer - Section 7"}),"\n",(0,i.jsxs)("div",{style:{textAlign:"justify"},children:[(0,i.jsx)(s.h1,{id:"section-7---wifi-connection-for-the-esp32",children:"Section 7 - Wifi connection for the ESP32"}),(0,i.jsxs)(s.admonition,{type:"note",children:[(0,i.jsx)(s.mdxAdmonitionTitle,{children:(0,i.jsx)(s.strong,{children:"Goals"})}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Understand the steps necessary to set up and connect an ESP32 board to a Wi-Fi network."}),"\n",(0,i.jsx)(s.li,{children:"Learn how to use the data structures from the Arduino WiFi library to create applications that utilize WiFi communication."}),"\n",(0,i.jsx)(s.li,{children:"Illustrate different application scenarios where WiFi connection can be used."}),"\n"]})]}),(0,i.jsx)(s.h2,{id:"arduino-core-for-the-esp32",children:"Arduino core for the ESP32"}),(0,i.jsxs)(s.p,{children:["As previously mentioned, the ESP32 is an evolution of the ESP8266. In the lab, we have several ",(0,i.jsx)(s.a,{href:"https://docs.ai-thinker.com/_media/esp32/docs/nodemcu-32s_product_specification.pdf",children:"NodeMCU-32S"})," modules. The following list highlights some useful references if you are interested in the ESP32:"]}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ESP32 - Manufacturer's page"})," (",(0,i.jsx)(s.a,{href:"https://www.espressif.com/en/products/socs/esp32",children:"link"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ESP-IDF Programming Guide"})," (",(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/",children:"link"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Arduino core for the ESP32"})," (",(0,i.jsx)(s.a,{href:"https://espressif.github.io/arduino-esp32/",children:"link"}),")"]}),"\n"]}),(0,i.jsxs)(s.p,{children:["In our case, we will focus on the ",(0,i.jsx)(s.strong,{children:"Arduino core for the ESP32"})," (",(0,i.jsx)(s.a,{href:"https://espressif.github.io/arduino-esp32/",children:"link"}),"), which contains all the information needed to program the ESP32 using the Arduino API (",(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/",children:"link"}),")."]}),(0,i.jsxs)(s.p,{children:["Before starting, it is important to check the available libraries in the API, which can be viewed at the following ",(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html",children:"link"}),"."]}),(0,i.jsx)(s.h2,{id:"arduino-core-for-the-esp32-wi-fi-api",children:"Arduino core for the ESP32: Wi-Fi API"}),(0,i.jsxs)(s.p,{children:["Since we are interested in analyzing how to connect the ESP32 to a WiFi network, the most relevant information can be found in the ",(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/wifi.html",children:"Wi-Fi API"}),". Therefore, we will focus on giving a quick overview of this before providing some examples."]}),(0,i.jsx)(s.p,{children:"About the API, the website mentions the following:"}),(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h3,{id:"about",children:(0,i.jsx)(s.strong,{children:"About"})}),"\n",(0,i.jsx)(s.p,{children:"The Wi-Fi API provides support for the 802 11b/g/n protocol driver. This API includes:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Station mode (STA mode or Wi-Fi client mode)ESP32 connects to an access point"}),"\n",(0,i.jsx)(s.li,{children:"AP mode (aka Soft-AP mode or Access Point mode) Devices connect to the ESP32"}),"\n",(0,i.jsx)(s.li,{children:"Security modes (WPA, WPA2, WEP, etc)."}),"\n",(0,i.jsx)(s.li,{children:"Scanning for access points"}),"\n"]}),"\n"]}),(0,i.jsx)(s.p,{children:"As a basic starting point, it is good to remember the roles that the ESP32 can take within a Wi-Fi network:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Access Point (AP)"}),": In this mode, the ESP32 is configured as an access point (AP), allowing connection between other devices (Stations) on the network."]}),"\n"]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://docs.espressif.com/projects/arduino-esp32/en/latest/_images/wifi_esp32_ap.png",alt:"wifi_esp32_ap"})}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Station (STA)"}),": In this case, the ESP32 connects, like any other device, to the Wi-Fi network through an Access Point."]}),"\n"]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://docs.espressif.com/projects/arduino-esp32/en/latest/_images/wifi_esp32_sta.png",alt:"wifi_esp32_sta"})}),(0,i.jsx)(s.h2,{id:"connectivity-test",children:"Connectivity test"}),(0,i.jsxs)(s.p,{children:["Before starting, the first thing we need to do is perform a basic test to verify the Wi-Fi functionality of the ",(0,i.jsx)(s.strong,{children:"NodeMCU-32S"})," module. So, follow these steps:"]}),(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Open the IDE IDE."}),"\n",(0,i.jsxs)(s.li,{children:["Select the board (",(0,i.jsx)(s.strong,{children:"Tools > Board > ESP32 Arduino > NodeMCU-32s"}),")."]}),"\n"]}),(0,i.jsx)(r.A,{src:t(3030).A,alt:"",className:"custom-img"}),(0,i.jsxs)(s.ol,{start:"2",children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Connect the NodeMCU-32S module to the PC."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Select the port."}),"\n"]}),"\n"]}),(0,i.jsx)(r.A,{src:t(2291).A,alt:"",className:"custom-img"}),(0,i.jsxs)(s.ol,{start:"5",children:["\n",(0,i.jsxs)(s.li,{children:["In the example section (",(0,i.jsx)(s.strong,{children:"examples"}),"), look for examples related to ",(0,i.jsx)(s.strong,{children:"NodeMCU-32S"})," (",(0,i.jsx)(s.strong,{children:"Examples for NodeMCU-32S"}),"), and select ",(0,i.jsx)(s.strong,{children:"WifiScan"}),", thus: ",(0,i.jsx)(s.strong,{children:"File > Examples > Wifi > WiFiScann"}),")"]}),"\n"]}),(0,i.jsx)(r.A,{src:t(2211).A,alt:"",className:"custom-img"}),(0,i.jsxs)(s.ol,{start:"6",children:["\n",(0,i.jsxs)(s.li,{children:["Compile and upload the example to the board. Unlike other boards, before proceeding with the firmware upload, you need to press and hold the ",(0,i.jsx)(s.strong,{children:"1OO"})," button on the board and release it as soon as the message ",(0,i.jsx)(s.code,{children:"Connecting..."})," appears in the upload console messages (for more information, see: ",(0,i.jsx)(s.a,{href:"https://randomnerdtutorials.com/getting-started-with-esp32/",children:"Getting Started with the ESP32 Development Board"}),").:"]}),"\n"]}),(0,i.jsx)(r.A,{src:t(1905).A,alt:"",className:"custom-img"}),(0,i.jsxs)(s.ol,{start:"7",children:["\n",(0,i.jsx)(s.li,{children:"Test the example by setting the serial terminal to the same value that appears in the program code (115200 in this case). If everything is correct, the serial monitor will display information about the available Wi-Fi networks as shown below:"}),"\n"]}),(0,i.jsx)(r.A,{src:t(4840).A,alt:"",className:"custom-img"}),(0,i.jsx)(s.h2,{id:"wifi-libraries",children:"Wifi libraries"}),(0,i.jsxs)(s.p,{children:["To make a connection using WiFi possible, an ",(0,i.jsx)(s.strong,{children:"Access Point (AP)"})," is necessary. An ",(0,i.jsx)(s.strong,{children:"AP"})," is a device that allows WiFi devices to connect to a wired network, as shown in the following figure:"]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{src:"https://esp8266-arduino-spanish.readthedocs.io/es/latest/_images/esp8266-station-soft-access-point.png",alt:"AP_connection"})}),(0,i.jsxs)(s.p,{children:["To enable an Arduino board to connect to a WiFi network, the ",(0,i.jsx)(s.strong,{children:"Arduino WiFi"})," is used. This is made possible through the ",(0,i.jsx)(s.strong,{children:"WiFi"})," library (",(0,i.jsx)(s.a,{href:"https://www.arduino.cc/en/Reference/WiFi",children:"link"}),"), which is included in the Arduino IDE."]}),(0,i.jsx)(s.p,{children:"The following are the most commonly used classes in this library:"}),(0,i.jsx)(s.h3,{id:"wifi-class",children:"WiFi Class"}),(0,i.jsx)(s.p,{children:"The WiFi class initializes the Ethernet library and network configuration. The following table shows some of the main methods:"}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Method"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Syntax"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.begin()"})}),(0,i.jsx)(s.td,{children:"Initializes the network configuration of the WiFi library and provides the current status"}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.code,{children:"WiFi.begin();"})," ",(0,i.jsx)("br",{})," ",(0,i.jsx)(s.code,{children:"WiFi.begin(ssid);"})," ",(0,i.jsx)("br",{})," ",(0,i.jsx)(s.code,{children:"WiFi.begin(ssid, pass);"})]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.disconnect()"})}),(0,i.jsx)(s.td,{children:"Disconnects the WiFi board from the current network"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.disconnect();"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.status()"})}),(0,i.jsxs)(s.td,{children:["Returns the connection status (",(0,i.jsx)(s.code,{children:"WL_CONNECTED"}),", ",(0,i.jsx)(s.code,{children:"WL_CONNECTION_LOST"}),", ",(0,i.jsx)(s.code,{children:"WL_DISCONNECTED"})," and ",(0,i.jsx)(s.code,{children:"WL_CONNECT_FAILED"})," among others)."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.status();"})})]})]})]}),(0,i.jsx)(s.p,{children:"For more information, please visit:"}),(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.arduino.cc/en/Reference/WiFi",children:"Arduino WiFi library"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://arduino-esp8266.readthedocs.io/en/latest/index.html",children:"ESP8266 Arduino Core\u2019s"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://esp8266-arduino-spanish.readthedocs.io/es/latest/#",children:"ESP8266 Arduino Core\u2019s en espa\xf1ol"})}),"\n"]}),(0,i.jsx)(s.h3,{id:"ipaddress-class",children:"IPAddress Class"}),(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"IPAddress"})," class provides information about the network configuration. The following table shows the methods of the ",(0,i.jsx)(s.code,{children:"WiFi"})," class that are used with this class:"]}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Method"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Syntax"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.localIP()"})}),(0,i.jsx)(s.td,{children:"Gets the IP address of the WiFi board"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.localIP();"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.subnetMask()"})}),(0,i.jsx)(s.td,{children:"Gets the subnet mask of the WiFi board"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.subnetMask();"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.gatewayIP()"})}),(0,i.jsx)(s.td,{children:"Gets the gateway IP address of the WiFi board"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFi.gatewayIP();"})})]})]})]}),(0,i.jsx)(s.h3,{id:"server-class",children:"Server Class"}),(0,i.jsx)(s.p,{children:"The Server class creates servers that can send and receive data from connected clients (programs running on other computers or devices). This class is the base class for WiFi Server. The following constructor is used for its instantiation:"}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Class"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Constructor syntax"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFiServer"})}),(0,i.jsx)(s.td,{children:"Creates a server that listens for incoming connections on the specified port"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"Server(port);"})})]})})]}),(0,i.jsx)(s.p,{children:"Below is a summary of some of the main methods associated with this class."}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Method"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Syntax"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"begin()"})}),(0,i.jsx)(s.td,{children:"Instructs the server to start listening for incoming connections"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"server.begin();"})})]})})]}),(0,i.jsx)(s.h3,{id:"client-class",children:"Client Class"}),(0,i.jsx)(s.p,{children:"The Client class creates clients that can connect to servers and send and receive data."}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Method"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Syntax"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFiClient()"})}),(0,i.jsxs)(s.td,{children:["Creates a client that can connect to a specified IP address and Internet port as defined in ",(0,i.jsx)(s.code,{children:"client.connect()"}),"."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WiFiClient();"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"connected()"})}),(0,i.jsx)(s.td,{children:"Determines whether the client is connected or not"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"client.connected();"})})]})]})]}),(0,i.jsxs)(s.p,{children:["Due to the widespread use of the ESP8266, a WiFi library was created (which tries to maintain the philosophy of the original Arduino library) for this platform. For more information about this library, you can refer to the ",(0,i.jsx)(s.a,{href:"https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/readme.html",children:"ESP8266WiFi library"})," section of the ",(0,i.jsx)(s.a,{href:"https://arduino-esp8266.readthedocs.io/en/latest/index.html",children:"ESP8266 Arduino Core"})," API."]}),(0,i.jsx)(s.h2,{id:"references",children:"References"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://randomnerdtutorials.com/getting-started-with-esp32/",children:"https://randomnerdtutorials.com/getting-started-with-esp32/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://randomnerdtutorials.com/esp32-pinout-reference-gpios/",children:"https://randomnerdtutorials.com/esp32-pinout-reference-gpios/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/",children:"https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/",children:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.espressif.com/en/products/socs/esp32",children:"https://www.espressif.com/en/products/socs/esp32"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.platformio.org/en/stable/boards/espressif32/nodemcu-32s.html",children:"https://docs.platformio.org/en/stable/boards/espressif32/nodemcu-32s.html"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/",children:"https://docs.espressif.com/projects/arduino-esp32/en/latest/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/",children:"https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/espressif-esp-iot-solution/en/latest/index.html",children:"https://docs.espressif.com/projects/espressif-esp-iot-solution/en/latest/index.html"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://espressif.github.io/arduino-esp32/",children:"https://espressif.github.io/arduino-esp32/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html",children:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html",children:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html"}),"*"]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/wifi.html",children:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/wifi.html"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://pygmalion.tech/tutoriales/robotica-basica/tutorial-camara-termica-amg8833/",children:"https://pygmalion.tech/tutoriales/robotica-basica/tutorial-camara-termica-amg8833/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://pygmalion.tech/tutoriales/",children:"https://pygmalion.tech/tutoriales/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://esp32.com/",children:"https://esp32.com/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.espressif.com/en/products/socs/esp32/resources",children:"https://www.espressif.com/en/products/socs/esp32/resources"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/espressif",children:"https://github.com/espressif"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://blynk.io/",children:"https://blynk.io/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html",children:"https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/UdeA-IoT/actividad-6",children:"https://github.com/UdeA-IoT/actividad-6"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/tamberg/fhnw-iot",children:"https://github.com/tamberg/fhnw-iot"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.networkworld.com/article/3133738/dweetio-a-simple-effective-messaging-service-for-the-internet-of-things.html",children:"https://www.networkworld.com/article/3133738/dweetio-a-simple-effective-messaging-service-for-the-internet-of-things.html"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.learnrobotics.org/blog/nodemcu-dweet-io-freeboard-io-tutorial-for-iot/",children:"https://www.learnrobotics.org/blog/nodemcu-dweet-io-freeboard-io-tutorial-for-iot/"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.iotify.io/temp/untitled-4",children:"https://docs.iotify.io/temp/untitled-4"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/Freeboard/freeboard",children:"https://github.com/Freeboard/freeboard"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.analog.com/media/en/news-marketing-collateral/solutions-bulletins-brochures/Connectivity-Solutions-for-the-Internet-of-Things-Web.pdf",children:"https://www.analog.com/media/en/news-marketing-collateral/solutions-bulletins-brochures/Connectivity-Solutions-for-the-Internet-of-Things-Web.pdf"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.analog.com/en/applications/technology/internet-of-things.html",children:"https://www.analog.com/en/applications/technology/internet-of-things.html"})}),"\n"]})]})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,s,t)=>{t.d(s,{A:()=>o});t(6540);var i=t(4164);const n={tabItem:"tabItem_Ymn6"};var r=t(4848);function o(e){let{children:s,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(n.tabItem,o),hidden:t,children:s})}},1470:(e,s,t)=>{t.d(s,{A:()=>y});var i=t(6540),n=t(4164),r=t(3104),o=t(6347),c=t(205),l=t(7485),a=t(1682),d=t(679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:s,children:t}=e;return(0,i.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:t,attributes:i,default:n}}=e;return{value:s,label:t,attributes:i,default:n}}))}(t);return function(e){const s=(0,a.X)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,t])}function u(e){let{value:s,tabValues:t}=e;return t.some((e=>e.value===s))}function x(e){let{queryString:s=!1,groupId:t}=e;const n=(0,o.W6)(),r=function(e){let{queryString:s=!1,groupId:t}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:s,groupId:t});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const s=new URLSearchParams(n.location.search);s.set(r,e),n.replace({...n.location,search:s.toString()})}),[r,n])]}function j(e){const{defaultValue:s,queryString:t=!1,groupId:n}=e,r=p(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!u({value:s,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:s,tabValues:r}))),[a,h]=x({queryString:t,groupId:n}),[j,f]=function(e){let{groupId:s}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(s),[n,r]=(0,d.Dv)(t);return[n,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:n}),m=(()=>{const e=a??j;return u({value:e,tabValues:r})?e:null})();(0,c.A)((()=>{m&&l(m)}),[m]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),f(e)}),[h,f,r]),tabValues:r}}var f=t(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function g(e){let{className:s,block:t,selectedValue:i,selectValue:o,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:a}=(0,r.a_)(),d=e=>{const s=e.currentTarget,t=l.indexOf(s),n=c[t].value;n!==i&&(a(s),o(n))},h=e=>{let s=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;s=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;s=l[t]??l[l.length-1];break}}s?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":t},s),children:c.map((e=>{let{value:s,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===s?0:-1,"aria-selected":i===s,ref:e=>l.push(e),onKeyDown:h,onClick:d,...r,className:(0,n.A)("tabs__item",m.tabItem,r?.className,{"tabs__item--active":i===s}),children:t??s},s)}))})}function w(e){let{lazy:s,children:t,selectedValue:n}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(s){const e=r.find((e=>e.props.value===n));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,s)=>(0,i.cloneElement)(e,{key:s,hidden:e.props.value!==n})))})}function v(e){const s=j(e);return(0,b.jsxs)("div",{className:(0,n.A)("tabs-container",m.tabList),children:[(0,b.jsx)(g,{...s,...e}),(0,b.jsx)(w,{...s,...e})]})}function y(e){const s=(0,f.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(s))}},168:(e,s,t)=>{t.d(s,{A:()=>n});t(6540);var i=t(4848);const n=function(e){let{src:s,alt:t,caption:n,className:r}=e;return(0,i.jsxs)("div",{className:"custom-img-container",children:[(0,i.jsx)("img",{src:s,alt:t,className:`custom-img ${r}`}),n&&(0,i.jsx)("div",{className:"custom-caption",dangerouslySetInnerHTML:{__html:n}})]})}},1905:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/conexion-720940d784f4ad5c090a2a574c4b771b.png"},2211:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/esp32_wifi_scan-78d0b4f36f5786b5e4f6ad3caaa9c8ba.png"},3030:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/modulo_esp32-b49a8756b976e6b690226a4edf6483db.png"},2291:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/puerto_seleccion-e62870029768eadd3669fba6a9f59ba0.png"},4840:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/scann_wifi_terminal-f39d8d848b99ab11a4cf890f503fbe37.png"},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>c});var i=t(6540);const n={},r=i.createContext(n);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);